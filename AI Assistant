import pyttsx3
import datetime
import speech_recognition as sr
import webbrowser as wb
import os
#import wolframalpha
#import wikipedia
#import smtplib
#pip install --global-option='build_ext' --global-option='-I/usr/local/include' --global-option='-L/usr/local/lib' pyaudio

engine=pyttsx3.init()
def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def time_():
    Time = datetime.datetime.now().strftime("%H:%M:%S")
    speak("The current time is")
    speak(Time)
#pyinstaller --onefile 'Personal Assistant.py'



def wishme():
    speak("Welcome back Inna!")
    time_()



#Greetings
    hour = datetime.datetime.now().hour
    if hour >=6 and hour<12:
        speak("Good Morning Inna!")
    elif hour>=12 and hour<18:
        speak("Good Afternoon Inna!")
    elif hour>=18 and hour<24:
        speak("Good Evening Inna!")
    else:
        speak("Good Night Inna! See you tomorrow.")
    speak("Jarvis at your service. Please tell me how can I help you today?")

def TakeCommand():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 1
        audio = r.listen(source)
    try:
        print("Recognizing...")
        query = r.recognize_google(audio, language='en-pk')
        print(query)

    except Exception as e:
        print(e)
        print("Say that again please...")
        return "None"
    return query
def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    # Enable low security in gmail
    server.login('Your email', 'Your password')
    server.sendmail('Your email', to, content)
    server.close()

if __name__== "__main__":
   # wishme()
    while True:
        query=TakeCommand().lower()
        if 'time' in query:
            time_()
        elif 'youtube' in query:
            speak("What should I search?")
            Search_term = TakeCommand().lower()
            speak("Here we go to Youtube\n")
            wb.open("https://www.youtube.com/results?search_query="+Search_term)
            time.sleep(5)
        elif 'google' in query:
            speak("What should I search?")
            Search_term = TakeCommand().lower()
            wb.open('https://www.google.com/search?q='+Search_term)
        elif 'write a note' in query:
            speak('What should I write, Inna?')
            note=TakeCommand()
            file=open('../../../Desktop/ai/note.txt', 'w')
            file.write(note)
            speak('Done taking notes, Inna')
        elif 'remember that' in query:
            speak("What should I remember,Inna?")
            memory = TakeCommand()
            speak("You asked me to remember that"+memory)
            remember = open('memory.txt','w')
            remember.write(memory)
            remember.close()
        elif "where is" in query:
            query = query.replace("where is", "")
            location = query
            speak("Inna asked to Locate")
            speak(location)
            wb.open("https://www.google.com/maps/place/" + location + "")
        elif 'do you remember anything' in query:
            remember =open('memory.txt', 'r')
            speak("You asked me to remeber that"+remember.read())
            print(remember.read())
        elif 'show notes' in query:
            speak('showing notes')
            file=open('../../../Desktop/ai/note.txt', 'r')
            print(file.read())
            speak(file.read())
        #elif "what is" in query or "who is" in query:

			# Use the same API key
            #client = wolframalpha.Client("wolfram alpha api")
            #res = client.query(query)

            #try:
                #print (next(res.results).text)
                #speak (next(res.results).text)
            #except StopIteration:
                #print ("No results")

        elif 'offline' in query:
            speak('Bye Inna. See you soon. I love you')
            quit()
        elif "don't listen" in query or "stop listening" in query:
            speak("for how many seconds you want me to stop listening commands")
            a = int(TakeCommand())
            time.sleep(a)
            print(a)
        elif 'log out' in query:
            os.system("shutdown -l")
        elif 'restart' in query:
            os.system("shutdown /r /t 1")
        elif 'shutdown' in query:
            os.system("shutdown /s /t 1")

      # elif 'wikipedia' in query:
            #speak("Searching...")
            #query = query.replace('wikipedia','')
            #result = wikipedia.summary(query, sentences=2)
            #speak("According to Wikipedia")
            #print(result)
            #speak(result)
            #elif 'send email' in query:
            #try:
               # speak("What should I say?")
                #content = TakeCommand()
               # speak("Who is the Reciever?")
               # reciept = input("Enter recieptant's name: ")
               # to = (reciept)
               # sendEmail(to,content)
               # speak(content)
              #  speak("Email has been sent.")
            #except Exception as e:
             #   print(e)
              #  speak("Unable to send the email.")'''
            #elif 'chrome' in query:
            #speak('what should I search?')
            #chromepath='/Users/innalu/Desktop/auto'
            #search = TakeCommand().lower()
            #wb.get(chromepath).open_new_tab(search+'.com')
